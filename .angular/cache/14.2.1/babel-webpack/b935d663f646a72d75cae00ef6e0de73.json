{"ast":null,"code":"import { EventEmitter, SimpleChanges } from '@angular/core';\nimport * as i0 from \"@angular/core\";\n\nfunction ImgComponent_img_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"img\", 2);\n    i0.ɵɵlistener(\"load\", function ImgComponent_img_0_Template_img_load_0_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.imgLoaded());\n    })(\"error\", function ImgComponent_img_0_Template_img_error_0_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.imgError());\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"src\", ctx_r0.img, i0.ɵɵsanitizeUrl);\n  }\n}\n\nfunction ImgComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 3);\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"src\", ctx_r2.imageDefault, i0.ɵɵsanitizeUrl);\n  }\n}\n\nexport class ImgComponent {\n  // counter = 0;\n  // counterFn: number | undefined;\n  constructor() {\n    this.img = '';\n    this.alt = '';\n    this.loaded = new EventEmitter();\n    this.imageDefault = './assets/images/default.png'; // before render\n    // NO async -- once time\n\n    console.log('constructor', 'imgValue =>', this.img);\n  } // eslint-disable-next-line @angular-eslint/no-input-rename\n\n\n  set changeImg(newImg) {\n    this.img = newImg;\n    console.log('change just img  =>', this.img); // code\n  }\n\n  ngOnChanges(changes) {\n    // before - during render\n    // changes inputs -- multiples times\n    console.log('ngOnChanges', 'imgValue =>', this.img);\n    console.log('changes', changes); // if (changes.) {\n    //   // code\n    // }\n  }\n\n  ngOnInit() {\n    // before render\n    // async - fetch -- once time\n    console.log('ngOnInit', 'imgValue =>', this.img); // this.counterFn = window.setInterval(() => {\n    //   this.counter += 1;\n    //   console.log('run counter');\n    // }, 1000);\n  }\n\n  ngAfterViewInit() {\n    // after render\n    // handler children -- once time\n    console.log('ngAfterViewInit');\n  }\n\n  ngOnDestroy() {\n    // delete -- once time\n    console.log('ngOnDestroy'); // window.clearInterval(this.counterFn);\n  }\n\n  imgError() {\n    this.img = this.imageDefault;\n  }\n\n  imgLoaded() {\n    console.log('log hijo');\n    this.loaded.emit(this.img);\n  }\n\n}\n\nImgComponent.ɵfac = function ImgComponent_Factory(t) {\n  return new (t || ImgComponent)();\n};\n\nImgComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ImgComponent,\n  selectors: [[\"app-img\"]],\n  inputs: {\n    changeImg: [\"img\", \"changeImg\"],\n    alt: \"alt\"\n  },\n  outputs: {\n    loaded: \"loaded\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 3,\n  vars: 2,\n  consts: [[3, \"src\", \"load\", \"error\", 4, \"ngIf\", \"ngIfElse\"], [\"elseImg\", \"\"], [3, \"src\", \"load\", \"error\"], [\"alt\", \"\", 3, \"src\"]],\n  template: function ImgComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, ImgComponent_img_0_Template, 1, 1, \"img\", 0);\n      i0.ɵɵtemplate(1, ImgComponent_ng_template_1_Template, 1, 1, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n    }\n\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(2);\n\n      i0.ɵɵproperty(\"ngIf\", ctx.img)(\"ngIfElse\", _r1);\n    }\n  },\n  styles: [\"img[_ngcontent-%COMP%] {\\n  max-width: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImltZy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGVBQUE7QUFDRiIsImZpbGUiOiJpbWcuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpbWcge1xyXG4gIG1heC13aWR0aDogMTAwJTtcclxufVxyXG4iXX0= */\"]\n});","map":{"version":3,"mappings":"AAAA,SAA2CA,YAA3C,EAA8FC,aAA9F,QAAmH,eAAnH;;;;;;;ICAAC;IAAKA;MAAAA;MAAA;MAAA,OAAQA,kCAAR;IAAmB,CAAnB,EAAoB,OAApB,EAAoB;MAAAA;MAAA;MAAA,OAAUA,iCAAV;IAAoB,CAAxC;IAALA;;;;;IAA+CA;;;;;;IAG7CA;;;;;IAAKA;;;;ADIP,OAAM,MAAOC,YAAP,CAAmB;EAcvB;EACA;EAEAC;IAfA,WAAc,EAAd;IASS,WAAc,EAAd;IACC,cAAS,IAAIJ,YAAJ,EAAT;IACV,oBAAe,6BAAf,CAIA,CACE;IACA;;IACAK,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2B,aAA3B,EAA0C,KAAKC,GAA/C;EACD,CArBsB,CAIvB;;;EAEa,IAATC,SAAS,CAACC,MAAD,EAAe;IAC1B,KAAKF,GAAL,GAAWE,MAAX;IACAJ,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmC,KAAKC,GAAxC,EAF0B,CAG1B;EACD;;EAaDG,WAAW,CAACC,OAAD,EAAuB;IAChC;IACA;IACAN,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2B,aAA3B,EAA0C,KAAKC,GAA/C;IACAF,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBK,OAAvB,EAJgC,CAKhC;IACA;IACA;EACD;;EAEDC,QAAQ;IACN;IACA;IACAP,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB,aAAxB,EAAuC,KAAKC,GAA5C,EAHM,CAIN;IACA;IACA;IACA;EACD;;EAEDM,eAAe;IACb;IACA;IACAR,OAAO,CAACC,GAAR,CAAY,iBAAZ;EACD;;EAEDQ,WAAW;IACT;IACAT,OAAO,CAACC,GAAR,CAAY,aAAZ,EAFS,CAGT;EACD;;EAEDS,QAAQ;IACN,KAAKR,GAAL,GAAW,KAAKS,YAAhB;EACD;;EAEDC,SAAS;IACPZ,OAAO,CAACC,GAAR,CAAY,UAAZ;IACA,KAAKY,MAAL,CAAYC,IAAZ,CAAiB,KAAKZ,GAAtB;EACD;;AA9DsB;;;mBAAZJ;AAAY;;;QAAZA;EAAYiB;EAAAC;IAAAb;IAAAc;EAAA;EAAAC;IAAAL;EAAA;EAAAM;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCPzB1B;MAEAA;;;;;;MAF4DA,+BAAW,UAAX,EAAW2B,GAAX","names":["EventEmitter","SimpleChanges","i0","ImgComponent","constructor","console","log","img","changeImg","newImg","ngOnChanges","changes","ngOnInit","ngAfterViewInit","ngOnDestroy","imgError","imageDefault","imgLoaded","loaded","emit","selectors","inputs","alt","outputs","features","decls","vars","consts","template","_r1"],"sourceRoot":"","sources":["C:\\Users\\Edwi\\Documents\\platzi\\Frontend\\angularAPI\\angular-APIS\\src\\app\\components\\img\\img.component.ts","C:\\Users\\Edwi\\Documents\\platzi\\Frontend\\angularAPI\\angular-APIS\\src\\app\\components\\img\\img.component.html"],"sourcesContent":["import { Component, OnInit, Input, Output, EventEmitter, OnChanges, AfterViewInit, OnDestroy, SimpleChanges } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-img',\r\n  templateUrl: './img.component.html',\r\n  styleUrls: ['./img.component.scss']\r\n})\r\nexport class ImgComponent implements OnInit, OnChanges, AfterViewInit, OnDestroy {\r\n\r\n  img: string = '';\r\n\r\n  // eslint-disable-next-line @angular-eslint/no-input-rename\r\n  @Input('img')\r\n  set changeImg(newImg: string) {\r\n    this.img = newImg;\r\n    console.log('change just img  =>' ,this.img);\r\n    // code\r\n  }\r\n  @Input() alt: string = '';\r\n  @Output() loaded = new EventEmitter<string>();\r\n  imageDefault = './assets/images/default.png';\r\n  // counter = 0;\r\n  // counterFn: number | undefined;\r\n\r\n  constructor() {\r\n    // before render\r\n    // NO async -- once time\r\n    console.log('constructor', 'imgValue =>', this.img);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    // before - during render\r\n    // changes inputs -- multiples times\r\n    console.log('ngOnChanges', 'imgValue =>', this.img);\r\n    console.log('changes', changes);\r\n    // if (changes.) {\r\n    //   // code\r\n    // }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // before render\r\n    // async - fetch -- once time\r\n    console.log('ngOnInit', 'imgValue =>', this.img);\r\n    // this.counterFn = window.setInterval(() => {\r\n    //   this.counter += 1;\r\n    //   console.log('run counter');\r\n    // }, 1000);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    // after render\r\n    // handler children -- once time\r\n    console.log('ngAfterViewInit');\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // delete -- once time\r\n    console.log('ngOnDestroy');\r\n    // window.clearInterval(this.counterFn);\r\n  }\r\n\r\n  imgError() {\r\n    this.img = this.imageDefault;\r\n  }\r\n\r\n  imgLoaded() {\r\n    console.log('log hijo');\r\n    this.loaded.emit(this.img);\r\n  }\r\n\r\n}\r\n","<img (load)=\"imgLoaded()\" (error)=\"imgError()\" [src]=\"img\" *ngIf=\"img; else elseImg\">\r\n<!-- <h3>{{ counter }}</h3> -->\r\n<ng-template #elseImg>\r\n  <img [src]=\"imageDefault\" alt=\"\">\r\n</ng-template>\r\n"]},"metadata":{},"sourceType":"module"}